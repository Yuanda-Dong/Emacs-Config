;; init-shell.el -- User init file for Emacs.  -*- lexical-binding: t;-*-

;;; Commentary:

;; This file was generated by org-babel from config.org and should not be edited
;; directly.

;;; Code:

(use-package vterm
  :hook (vterm-mode . (lambda () (set-window-fringes (selected-window) 0 0 nil)))
  :config
  (advice-add #'vterm--redraw :after (lambda (&rest args) (evil-refresh-cursor evil-state)))
  :custom
    vterm-shell "/usr/bin/fish")

(use-package multi-vterm
  :after vterm
)


;; (use-package vterm-toggle)
  ;; :bind
  ;; (([f2] . 'vterm-toggle)

;; you can cd to the directory where your previous buffer file exists
;; after you have toggle to the vterm buffer with `vterm-toggle'.
;; ([(control return)] .  #'vterm-toggle-insert-cd))

;; ;Switch to next vterm buffer
;; (define-key vterm-mode-map (kbd "s-n")   'vterm-toggle-forward)
;; ;Switch to previous vterm buffer
;; (define-key vterm-mode-map (kbd "s-p")   'vterm-toggle-backward)
;; (:vterm-mode-map
;; ([C-f2] . 'vterm-toggle-cd)))

;; (use-package vterm-toggle
;;   :config
;;   (setq vterm-toggle-fullscreen-p nil)
;;   (add-to-list 'display-buffer-alist
;;                '((lambda (buffer-or-name _)
;;                    (let ((buffer (get-buffer buffer-or-name)))
;;                      (with-current-buffer buffer
;;                        (or (equal major-mode 'vterm-mode)
;;                            (string-prefix-p vterm-buffer-name (buffer-name buffer))))))
;;                  (display-buffer-reuse-window display-buffer-at-bottom)
;;                  ;;(display-buffer-reuse-window display-buffer-in-direction)
;;                  ;;display-buffer-in-direction/direction/dedicated is added in emacs27
;;                  ;;(direction . bottom)
;;                  ;;(dedicated . t) ;dedicated is supported in emacs27
;;                  (reusable-frames . visible)
;;                  (window-height . 0.3))))
;;          ;; ([f2] . vterm-toggle)
;;          ;; ([C-f2] . 'vterm-toggle-cd)))

(provide 'init-shell)

;;; init-shell.el ends here
